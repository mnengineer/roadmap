// File generated by FlutterFire CLI.

import 'package:firebase_core/firebase_core.dart' show FirebaseOptions;
import 'package:flutter/foundation.dart'
    show TargetPlatform, defaultTargetPlatform, kIsWeb;

FirebaseOptions get currentPlatform {
  if (kIsWeb) {
    throw UnsupportedError(
      'DefaultFirebaseOptions have not been configured for web - '
      'you can reconfigure this by running the FlutterFire CLI again.',
    );
  }
  switch (defaultTargetPlatform) {
    case TargetPlatform.android:
      return android;
    case TargetPlatform.iOS:
      return ios;
    case TargetPlatform.macOS:
      throw UnsupportedError(
        'DefaultFirebaseOptions have not been configured for macos - '
        'you can reconfigure this by running the FlutterFire CLI again.',
      );
    case TargetPlatform.windows:
      throw UnsupportedError(
        'DefaultFirebaseOptions have not been configured for windows - '
        'you can reconfigure this by running the FlutterFire CLI again.',
      );
    case TargetPlatform.linux:
      throw UnsupportedError(
        'DefaultFirebaseOptions have not been configured for linux - '
        'you can reconfigure this by running the FlutterFire CLI again.',
      );
    case TargetPlatform.fuchsia:
      throw UnsupportedError(
        'DefaultFirebaseOptions have not been configured for fuchsia - '
        'you can reconfigure this by running the FlutterFire CLI again.',
      );
  }
}

const FirebaseOptions android = FirebaseOptions(
  apiKey: String.fromEnvironment('firebaseAndroidApiKey'),
  appId: String.fromEnvironment('firebaseAndroidAppId'),
  messagingSenderId: String.fromEnvironment('firebaseAndroidMessagingSenderId'),
  projectId: String.fromEnvironment('firebaseAndroidProjectId'),
  storageBucket: String.fromEnvironment('firebaseAndroidStorageBucket'),
);

const FirebaseOptions ios = FirebaseOptions(
  apiKey: String.fromEnvironment('firebaseIosApiKey'),
  appId: String.fromEnvironment('firebaseIosAppId'),
  messagingSenderId: String.fromEnvironment('firebaseIosMessagingSenderId'),
  projectId: String.fromEnvironment('firebaseIosProjectId'),
  storageBucket: String.fromEnvironment('firebaseIosStorageBucket'),
  iosBundleId: String.fromEnvironment('firebaseIosIosBundleId'),
);
